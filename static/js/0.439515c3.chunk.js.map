{"version":3,"sources":["projects/AnalyzeSourceProj.jsx","images/analyze-source-demo.png"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_images_analyze_source_demo_png__WEBPACK_IMPORTED_MODULE_1__","_images_analyze_source_demo_png__WEBPACK_IMPORTED_MODULE_1___default","AnalyzeSourceProj","a","createElement","width","src","analyzeSourceDemoPng","alt","href","module","exports","p"],"mappings":"yFAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,IAAAO,EAAAP,EAAAK,EAAAC,GAeeE,UAZf,WACE,OACEJ,EAAAK,EAAAC,cAAA,WACEN,EAAAK,EAAAC,cAAA,4BACAN,EAAAK,EAAAC,cAAA,OAAKC,MAAM,MAAMC,IAAKC,IAAsBC,IAAI,oCAChDV,EAAAK,EAAAC,cAAA,SAAGN,EAAAK,EAAAC,cAAA,KAAGK,KAAK,qEAAmE,gBAC9EX,EAAAK,EAAAC,cAAA,+2BACAN,EAAAK,EAAAC,cAAA,+OCVNM,EAAAC,QAAiBjB,EAAAkB,EAAuB","file":"static/js/0.439515c3.chunk.js","sourcesContent":["import React from 'react';\r\nimport analyzeSourceDemoPng from \"../images/analyze-source-demo.png\";\r\n\r\nfunction AnalyzeSourceProj() {\r\n  return (\r\n    <div>\r\n      <h1>analyze-source</h1>\r\n      <img width=\"50%\" src={analyzeSourceDemoPng} alt=\"Sample output of analyze-source\"></img> \r\n      <p><a href=\"https://github.com/dism-exe/bn6f/tree/master/tools/analyze_source\">GitHub link</a></p>\r\n      <p>During 2019, I was working on a source recreation of a Game Boy Advance game called Mega Man Battle Network 6, which was written in ARM7TDMI assembly. Part of that process involves documenting the extracted assembly. I created a program that would automatically replace the raw numbers associated with struct accesses with variable names. This ends up being a non-trivial task as in assembly, thereâ€™s no way to know the specific type of a register on its own; so instead context from the entire function has to be used. The program will do a static trace from a starting function, using inference rules to determine the type of a register each time it is modified with a new value. For example, reading from a specific part of memory into register r0, where that memory is marked as containing a BattleObject type would set a register r0 to a BattleObject type.</p>\r\n      <p>The project overall required deep knowledge of core Python features and programming techniques such as string parsing and manipulation, regex, data structure manipulation, and object oriented programming.</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AnalyzeSourceProj;\r\n","module.exports = __webpack_public_path__ + \"static/media/analyze-source-demo.26660386.png\";"],"sourceRoot":""}