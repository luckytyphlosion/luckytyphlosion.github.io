{"version":3,"sources":["projects/AnalyzeSourceProj.jsx","images/analyze-source-demo.png","projects lazy /^/.*$/ groupOptions: {} namespace object","Navbar.jsx","pages/HomePage.jsx","pages/AboutPage.jsx","pages/ProjectsPage.jsx","Main.jsx","App.jsx","index.jsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_images_analyze_source_demo_png__WEBPACK_IMPORTED_MODULE_1__","_images_analyze_source_demo_png__WEBPACK_IMPORTED_MODULE_1___default","AnalyzeSourceProj","a","createElement","className","width","src","analyzeSourceDemoPng","alt","target","rel","href","module","exports","p","map","./AnalyzeSourceProj","./AnalyzeSourceProj.jsx","./AutoTTRecorderGUIProj","./AutoTTRecorderGUIProj.jsx","./AutoTTRecorderProj","./AutoTTRecorderProj.jsx","./AutoTTRecorderYTProj","./AutoTTRecorderYTProj.jsx","./GnuAssemblerProj","./GnuAssemblerProj.jsx","webpackAsyncContext","req","ids","Promise","all","slice","e","then","id","resolve","Error","code","keys","Object","Navbar","react_default","dist","to","HomePage","AboutPage","ProjectsPage","_React$Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","curProject","setProjectView","bind","assertThisInitialized","inherits","createClass","key","value","event","Component","React","lazy","concat","setState","onClick","react","fallback","Main","react_router_dist","exact","path","element","pages_HomePage","pages_ProjectsPage","pages_AboutPage","App","src_Navbar","src_Main","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.c2200920.chunk.js","sourcesContent":["import React from 'react';\r\nimport analyzeSourceDemoPng from \"../images/analyze-source-demo.png\";\r\n\r\nfunction AnalyzeSourceProj() {\r\n  return (\r\n    <div className=\"project-content\">\r\n      <h1 className=\"project-header\">analyze-source</h1>\r\n      <div className=\"project-description\">\r\n        <img width=\"50%\" src={analyzeSourceDemoPng} alt=\"Sample output of analyze-source\"></img> \r\n        <p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/dism-exe/bn6f/tree/master/tools/analyze_source\">GitHub link</a></p>\r\n        <p>During 2019, I was working on a source recreation of a Game Boy Advance game called Mega Man Battle Network 6, which was written in ARM7TDMI assembly. Part of that process involves documenting the extracted assembly. I created a program that would automatically replace the raw numbers associated with struct accesses with variable names. This ends up being a non-trivial task as in assembly, there’s no way to know the specific type of a register on its own; so instead context from the entire function has to be used. The program will do a static trace from a starting function, using inference rules to determine the type of a register each time it is modified with a new value. For example, reading from a specific part of memory into register r0, where that memory is marked as containing a BattleObject type would set a register r0 to a BattleObject type.</p>\r\n        <p>The project overall required deep knowledge of core Python features and programming techniques such as string parsing and manipulation, regex, data structure manipulation, and object oriented programming.</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AnalyzeSourceProj;\r\n","module.exports = __webpack_public_path__ + \"static/media/analyze-source-demo.26660386.png\";","var map = {\n\t\"./AnalyzeSourceProj\": [\n\t\t14\n\t],\n\t\"./AnalyzeSourceProj.jsx\": [\n\t\t14\n\t],\n\t\"./AutoTTRecorderGUIProj\": [\n\t\t18,\n\t\t0\n\t],\n\t\"./AutoTTRecorderGUIProj.jsx\": [\n\t\t18,\n\t\t0\n\t],\n\t\"./AutoTTRecorderProj\": [\n\t\t19,\n\t\t1\n\t],\n\t\"./AutoTTRecorderProj.jsx\": [\n\t\t19,\n\t\t1\n\t],\n\t\"./AutoTTRecorderYTProj\": [\n\t\t20,\n\t\t2\n\t],\n\t\"./AutoTTRecorderYTProj.jsx\": [\n\t\t20,\n\t\t2\n\t],\n\t\"./GnuAssemblerProj\": [\n\t\t21,\n\t\t3\n\t],\n\t\"./GnuAssemblerProj.jsx\": [\n\t\t21,\n\t\t3\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 39;\nmodule.exports = webpackAsyncContext;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navbar.css\";\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <div id=\"navbar\">\r\n      <Link to=\"/\">Home</Link>\r\n      <Link to=\"/projects\">Projects</Link>\r\n      <Link to=\"/about\">About</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport \"./home.css\"\r\n\r\nfunction HomePage() {\r\n  return (\r\n    <div className=\"home-page-body\">\r\n      <p>My website. You can take a look at some of my projects, or read about me.</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\nimport \"./about.css\"\r\n\r\nfunction AboutPage() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"about-header\">About me</h1>\r\n      <p className=\"about-page-body\">Hi, my online handle is luckytyphlosion. I’m a programmer fluent in Python, Java, and C. I also am fluent in the Game Boy assembly language GBZ80. My programming projects usually revolve around making tools for the video game communities I’m in, whether the tools are for myself or for the community. Much of my projects have been related to reverse engineering the generation 1-3 series of Pokémon and Mega Man Battle Network, however in recent years I’ve started to branch out into web development to broaden my skills.</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AboutPage;\r\n","import React, { Suspense } from \"react\";\r\nimport AnalyzeSourceProj from \"../projects/AnalyzeSourceProj\";\r\nimport \"../projects.css\";\r\n\r\nclass ProjectsPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let state = {\r\n      curProject: <AnalyzeSourceProj/>\r\n    };\r\n    this.state = state;\r\n    this.setProjectView = this.setProjectView.bind(this);\r\n  }\r\n\r\n  setProjectView(event) {\r\n    const Component = React.lazy(() => import(`../projects/${event.target.value}`));\r\n    this.setState({\r\n      curProject: <Component/>\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div id=\"project-buttons\">\r\n          <button className=\"project-button\" onClick={this.setProjectView} value=\"AnalyzeSourceProj\">analyze-source</button>\r\n          <button className=\"project-button\" onClick={this.setProjectView} value=\"GnuAssemblerProj\">agbasm (GNU Assembler Modifications)</button>\r\n          <button className=\"project-button\" onClick={this.setProjectView} value=\"AutoTTRecorderProj\">Auto-TT-Recorder</button>\r\n          <button className=\"project-button\" onClick={this.setProjectView} value=\"AutoTTRecorderYTProj\">CTGP Legacy Records</button>\r\n          <button className=\"project-button\" onClick={this.setProjectView} value=\"AutoTTRecorderGUIProj\">Auto-TT-Recorder GUI</button>\r\n        </div>\r\n        <div id=\"project-view\">\r\n          <Suspense fallback={<div>Loading...</div>}>{this.state.curProject}</Suspense>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectsPage;\r\n","import React from 'react';\r\nimport { Route, Routes } from \"react-router-dom\";\r\n\r\nimport HomePage from './pages/HomePage';\r\nimport AboutPage from './pages/AboutPage';\r\nimport ProjectsPage from './pages/ProjectsPage';\r\n\r\nfunction Main() {\r\n  return (\r\n    <Routes>\r\n      <Route exact path='/' element={<HomePage/>}></Route>\r\n      <Route exact path='/projects' element={<ProjectsPage/>}></Route>\r\n      <Route exact path='/about' element={<AboutPage/>}></Route>\r\n    </Routes>\r\n  );\r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport Navbar from \"./Navbar\";\nimport Main from \"./Main\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div id=\"app-content\">\n        <Navbar/>\n        <Main/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./fonts.css\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}