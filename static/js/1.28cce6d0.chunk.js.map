{"version":3,"sources":["projects/AutoTTRecorderGUIProj.jsx","components/ExpandableImage.jsx","images/auto-tt-recorder-gui-window.png"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_images_auto_tt_recorder_gui_window_png__WEBPACK_IMPORTED_MODULE_1__","_images_auto_tt_recorder_gui_window_png__WEBPACK_IMPORTED_MODULE_1___default","_components_ExpandableImage__WEBPACK_IMPORTED_MODULE_2__","AutoTTRecorderGUIProj","a","createElement","className","width","fullWidth","src","autoTTRecGUIWindowPng","alt","target","rel","href","ExpandableImage","_React$Component","props","_this","Object","C_Users_User_Documents_GitHub_luckytyphlosion_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_User_Documents_GitHub_luckytyphlosion_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_User_Documents_GitHub_luckytyphlosion_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","initialWidth","undefined","setWidth","bind","C_Users_User_Documents_GitHub_luckytyphlosion_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","C_Users_User_Documents_GitHub_luckytyphlosion_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","C_Users_User_Documents_GitHub_luckytyphlosion_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","event","setState","prevState","react__WEBPACK_IMPORTED_MODULE_6___default","onClick","React","Component","module","exports","p"],"mappings":"yFAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,IAAAO,EAAAP,EAAAK,EAAAC,GAAAE,EAAAR,EAAA,IAkBeS,UAdf,WACE,OACEL,EAAAM,EAAAC,cAAA,OAAKC,UAAU,mBACbR,EAAAM,EAAAC,cAAA,MAAIC,UAAU,kBAAgB,wBAC9BR,EAAAM,EAAAC,cAAA,OAAKC,UAAU,uBACbR,EAAAM,EAAAC,cAACH,EAAA,EAAe,CAACK,MAAM,MAAMC,UAAU,MAAMC,IAAKC,IAAuBC,IAAI,uCAC7Eb,EAAAM,EAAAC,cAAA,SAAGP,EAAAM,EAAAC,cAAA,KAAGO,OAAO,SAASC,IAAI,sBAAsBC,KAAK,2DAAyD,gBAC9GhB,EAAAM,EAAAC,cAAA,qPACAP,EAAAM,EAAAC,cAAA,+9BCTFU,SAAe,SAAAC,GACnB,SAAAD,EAAYE,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GACjBG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,KAAMJ,IACN,IAAIQ,EAAQ,CACVC,aAAcT,EAAMV,MACpBC,eAA+BmB,IAApBV,EAAMT,UAA0BS,EAAMT,UAAY,OAC7DD,MAAOU,EAAMV,MACbE,IAAKQ,EAAMR,IACXE,IAAKM,EAAMN,KAG4B,OADzCO,EAAKO,MAAQA,EACbP,EAAKU,SAAWV,EAAKU,SAASC,KAAKV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KAAMA,EAa1C,OAxBkBC,OAAAY,EAAA,EAAAZ,CAAAJ,EAAAC,GAYlBG,OAAAa,EAAA,EAAAb,CAAAJ,EAAA,EAAAkB,IAAA,WAAAC,MAAA,SAEQC,GACPd,KAAKe,SAAS,SAACC,EAAWpB,GAAK,MAAM,CACnCV,MAAO8B,EAAU9B,QAAU8B,EAAU7B,UAAY6B,EAAUX,aAAeW,EAAU7B,eAEvF,CAAAyB,IAAA,SAAAC,MAAA,WAGC,OACEI,EAAAlC,EAAAC,cAAA,OAAKC,UAAU,YAAYC,MAAOc,KAAKI,MAAMlB,MAAOgC,QAASlB,KAAKO,SAAUnB,IAAKY,KAAKI,MAAMhB,IAAKE,IAAKU,KAAKI,MAAMd,UAEpHI,EAxBkB,CAASyB,IAAMC,YA2BrB1B,+CC9Bf2B,EAAAC,QAAiBjD,EAAAkD,EAAuB","file":"static/js/1.28cce6d0.chunk.js","sourcesContent":["import React from 'react';\r\nimport autoTTRecGUIWindowPng from \"../images/auto-tt-recorder-gui-window.png\";\r\nimport ExpandableImage from \"../components/ExpandableImage\";\r\n\r\nfunction AutoTTRecorderGUIProj() {\r\n  return (\r\n    <div className=\"project-content\">\r\n      <h2 className=\"project-header\">Auto-TT-Recorder GUI</h2>\r\n      <div className=\"project-description\">\r\n        <ExpandableImage width=\"50%\" fullWidth=\"80%\" src={autoTTRecGUIWindowPng} alt=\"Screenshot of auto-tt-recorder-gui\"/>\r\n        <p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/luckytyphlosion/auto-tt-recorder-gui\">GitHub link</a></p>\r\n        <p>To ease use of Auto-TT-Recorder, I created a GUI wrapper over the program using Electron, React, and TypeScript. I chose Electron as a way to learn how to use React, and for me to step out of my comfort zone in terms of programming.</p>\r\n        <p>I learned many concepts about Electron, React, and Typescript during development. I had to learn the basics of TypeScript’s type checking, such as typed arguments, but I also learned about generic interfaces, keyof, and the as keyword. I learned about how React manages state via the state field and setState method of a React.Component. I learned about how React handles event changes using custom element attributes to be supplied with callbacks. I learned about the fundamentals of Electron to the point that I could release a basic application. I learned about Electron’s process model of having two processes, the main and renderer process, and how to communicate between them securely without exposing the renderer process to node.js using a preload script. I learned how to build a node.js app for distribution, and then use those built files in an Electron app.</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AutoTTRecorderGUIProj;\r\n","import React, { Suspense } from \"react\";\r\nimport \"./ExpandableImage.css\"\r\n\r\nclass ExpandableImage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let state = {\r\n      initialWidth: props.width,\r\n      fullWidth: props.fullWidth !== undefined ? props.fullWidth : \"100%\",\r\n      width: props.width,\r\n      src: props.src,\r\n      alt: props.alt\r\n    }\r\n    this.state = state;\r\n    this.setWidth = this.setWidth.bind(this);\r\n  }\r\n\r\n  setWidth(event) {\r\n    this.setState((prevState, props) => ({\r\n      width: prevState.width === prevState.fullWidth ? prevState.initialWidth : prevState.fullWidth\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <img className=\"clickable\" width={this.state.width} onClick={this.setWidth} src={this.state.src} alt={this.state.alt}></img> \r\n    );\r\n  }\r\n}\r\n\r\nexport default ExpandableImage;\r\n","module.exports = __webpack_public_path__ + \"static/media/auto-tt-recorder-gui-window.2f65f3c6.png\";"],"sourceRoot":""}