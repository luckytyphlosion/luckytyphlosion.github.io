(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{16:function(e,t,a){"use strict";a.r(t);var i=a(1),n=a.n(i),r=a(46),s=a.n(r),o=a(43);t.default=function(){return n.a.createElement("div",{className:"project-content"},n.a.createElement("h2",{className:"project-header"},"analyze-source"),n.a.createElement("div",{className:"project-description"},n.a.createElement(o.a,{width:"50%",src:s.a,alt:"Sample output of analyze-source"}),n.a.createElement("p",null,n.a.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://github.com/dism-exe/bn6f/tree/master/tools/analyze_source"},"GitHub link")),n.a.createElement("p",null,"During 2019, I was working on a source recreation of a Game Boy Advance game called Mega Man Battle Network 6, which was written in ARM7TDMI assembly. Part of that process involves documenting the extracted assembly. I created a program that would automatically replace the raw numbers associated with struct accesses with variable names. This ends up being a non-trivial task as in assembly, there\u2019s no way to know the specific type of a register on its own; so instead context from the entire function has to be used. The program will do a static trace from a starting function, using inference rules to determine the type of a register each time it is modified with a new value. For example, reading from a specific part of memory into register r0, where that memory is marked as containing a BattleObject type would set a register r0 to a BattleObject type."),n.a.createElement("p",null,"The project overall required deep knowledge of core Python features and programming techniques such as string parsing and manipulation, regex, data structure manipulation, and object oriented programming.")))}},43:function(e,t,a){"use strict";var i=a(6),n=a(7),r=a(9),s=a(5),o=a(8),c=a(12),l=a(1),u=a.n(l),d=(a(44),function(e){function t(e){var a;Object(i.a)(this,t),a=Object(r.a)(this,Object(s.a)(t).call(this,e));var n={initialWidth:e.width,fullWidth:void 0!==e.fullWidth?e.fullWidth:"100%",width:e.width,src:e.src,alt:e.alt};return a.state=n,a.setWidth=a.setWidth.bind(Object(c.a)(Object(c.a)(a))),a}return Object(o.a)(t,e),Object(n.a)(t,[{key:"setWidth",value:function(e){this.setState(function(e,t){return{width:e.width===e.fullWidth?e.initialWidth:e.fullWidth}})}},{key:"render",value:function(){return u.a.createElement("img",{className:"clickable",width:this.state.width,onClick:this.setWidth,src:this.state.src,alt:this.state.alt})}}]),t}(u.a.Component));t.a=d},44:function(e,t,a){},46:function(e,t,a){e.exports=a.p+"static/media/analyze-source-demo.26660386.png"}}]);
//# sourceMappingURL=0.557b5ab7.chunk.js.map